#!/usr/bin/env bash

if [ -z "${ESS_HOME}" ]; then
  export ESS_HOME="$(cd "`dirname "$0"`"/..; pwd)"
fi

export ESS_CONF_DIR="${ESS_CONF_DIR:-"${ESS_HOME}/conf"}"

if [ -z "$ESS_ENV_LOADED" ]; then
  export ESS_ENV_LOADED=1

  if [ -f "${ESS_CONF_DIR}/ess-env.sh" ]; then
    # Promote all variable declarations to environment (exported) variables
    set -a
    . "${ESS_CONF_DIR}/ess-env.sh"
    set +a
  fi
fi

# Find the java binary
if [ -n "${JAVA_HOME}" ]; then
  RUNNER="${JAVA_HOME}/bin/java"
else
  if [ "$(command -v java)" ]; then
    RUNNER="java"
  else
    echo "JAVA_HOME is not set" >&2
    exit 1
  fi
fi

# Find ESS jars.
if [ -d "${ESS_HOME}/jars" ]; then
  ESS_JARS_DIR="${ESS_HOME}/jars"
else
  ESS_JARS_DIR="${ESS_HOME}/service/target"
fi

if [ ! -d "$ESS_JARS_DIR" ]; then
  echo "Failed to find ESS jars directory ($ESS_JARS_DIR)." 1>&2
  echo "You need to build ESS with the target \"package\" before running this program." 1>&2
  exit 1
else
  ESS_CLASSPATH="$ESS_CONF_DIR:$ESS_JARS_DIR/*"
fi

# Turn off posix mode since it does not allow process substitution
set +o posix
CMD=()
CMD+=("$RUNNER")
CMD=(${CMD[@]} "$ESS_JAVA_OPTS")
CMD+=("-cp")
CMD+=("$ESS_CLASSPATH")
CMD=(${CMD[@]} "$@")

COUNT=${#CMD[@]}

exec "${CMD[@]}"
